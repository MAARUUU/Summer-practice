<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AIQhAeE/4Zz+v+YQhAf/2Q==
</value>
  </data>
</root>